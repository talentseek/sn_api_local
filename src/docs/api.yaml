openapi: 3.0.0
info:
  title: LinkedIn Sales Navigator Automation API
  description: API for automating LinkedIn Sales Navigator operations including connection management, messaging, and company data retrieval.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /api/check-open-profiles:
    post:
      summary: Check which profiles allow open messaging
      description: Identifies which profiles allow open messaging without a connection.
      tags:
        - Profile Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign
                maxProfiles:
                  type: integer
                  description: Maximum number of profiles to check
                  default: 50
                batchSize:
                  type: integer
                  description: Number of profiles to process in each batch
                  default: 10
            example:
              campaignId: 123
              maxProfiles: 50
              batchSize: 10
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /api/check-cookies:
    post:
      summary: Verify LinkedIn cookies validity
      description: Checks if the LinkedIn cookies for a campaign are still valid.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign to check cookies for
            example:
              campaignId: 123
      responses:
        '200':
          description: Cookie check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  cookiesStatus:
                    type: string
                    enum: [valid, invalid]
                    example: "valid"
                  message:
                    type: string
                    example: "LinkedIn cookies are valid"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /api/send-connection-requests:
    post:
      summary: Send connection requests
      description: |
        Sends connection requests to LinkedIn profiles with personalized messages.
        The system processes profiles in batches with configurable delays to prevent rate limiting.
        Each request can include a personalized message using profile data placeholders.
        The system handles various scenarios including pending requests, already connected profiles, and failed attempts.
        Job status and statistics are reported via Telegram notifications.
      tags:
        - Connection Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign
                maxProfiles:
                  type: integer
                  description: Maximum number of connection requests to send
                  default: 20
                batchSize:
                  type: integer
                  description: Number of requests to send in each batch
                  default: 5
                delayBetweenBatches:
                  type: integer
                  description: Delay in milliseconds between batches
                  default: 5000
                delayBetweenProfiles:
                  type: integer
                  description: Delay in milliseconds between profiles
                  default: 5000
                sendMessage:
                  type: boolean
                  description: Whether to include a personalized message with the connection request
                  default: true
            example:
              campaignId: 123
              maxProfiles: 20
              batchSize: 5
              delayBetweenBatches: 5000
              delayBetweenProfiles: 5000
              sendMessage: true
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Connection requests job accepted and queued"
                  jobId:
                    type: string
                    example: "connect_1234567890"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "campaignId is required"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Failed to fetch campaign data"
      x-codeSamples:
        - lang: curl
          source: |
            curl -X POST http://localhost:8080/api/send-connection-requests \
            -H "Content-Type: application/json" \
            -d '{
              "campaignId": 123,
              "maxProfiles": 20,
              "batchSize": 5,
              "delayBetweenBatches": 5000,
              "delayBetweenProfiles": 5000,
              "sendMessage": true
            }'
      x-statusCodes:
        - code: 200
          description: Job successfully created and queued
        - code: 400
          description: Invalid request parameters
        - code: 500
          description: Server error occurred
      x-telegramNotifications:
        - type: success
          description: Job completion notification with statistics
        - type: error
          description: Job failure notification with error details
        - type: status
          description: Status update during processing
  
  /api/send-open-profile-messages:
    post:
      summary: Send messages to open profiles
      description: Sends messages to open profiles that don't require a connection.
      tags:
        - Messaging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign
                messageStage:
                  type: integer
                  description: Message stage to send
                  default: 1
                totalMessages:
                  type: integer
                  description: Maximum number of messages to send
                  default: 30
                batchSize:
                  type: integer
                  description: Number of messages to send in each batch
                  default: 5
                delayBetweenBatches:
                  type: integer
                  description: Delay in milliseconds between batches
                  default: 5000
            example:
              campaignId: 123
              messageStage: 1
              totalMessages: 30
              batchSize: 5
              delayBetweenBatches: 5000
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /api/check-connection-requests:
    post:
      summary: Check connection request status
      description: |
        Checks the status of previously sent connection requests. Profiles are checked in priority order:
        1. Profiles that have never been checked (last_checked is NULL)
        2. Profiles that were checked longest ago (ordered by last_checked ascending)
        
        When a connection is accepted:
        - Profile is moved to the leads table (or updated if exists)
        - Profile status is updated to 'connected'
        - Last checked timestamp is updated
        
        The system includes rate limiting:
        - 1-2 second delay between profiles
        - 5-10 second delay between batches
        
        Job status and results are reported via Telegram notifications.
      tags:
        - Connection Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign
                maxProfiles:
                  type: integer
                  description: Maximum number of connection requests to check
                  default: 20
                batchSize:
                  type: integer
                  description: Number of requests to check in each batch
                  default: 5
            example:
              campaignId: 123
              maxProfiles: 20
              batchSize: 5
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: curl
          source: |
            curl -X POST http://localhost:8080/api/check-connection-requests \
            -H "Content-Type: application/json" \
            -d '{
              "campaignId": 16,
              "maxProfiles": 20,
              "batchSize": 5
            }'
      x-statusCodes:
        - code: 200
          description: Job successfully created and queued
        - code: 400
          description: Invalid request parameters
        - code: 500
          description: Server error occurred
      x-telegramNotifications:
        - type: success
          description: |
            Job completion notification with statistics:
            - Total profiles checked
            - Still pending
            - Newly connected
            - Moved to leads
            - Failed checks (if any)
        - type: error
          description: Job failure notification with error details
        - type: status
          description: Status updates during processing
  
  /api/send-connection-messages:
    post:
      summary: Send messages to 1st-degree connections
      description: |
        Sends follow-up messages to 1st-degree connections on LinkedIn. Supports multi-stage messaging sequences 
        with configurable delays between stages. Messages are personalized using profile data and sent in batches 
        with rate limiting to prevent detection.

        Key features:
        - Multi-stage message sequences with configurable delays
        - Personalized messages using profile data
        - Batch processing with rate limiting
        - Status tracking and detailed reporting
        - Telegram notifications for job status
        - Error handling and recovery

        The system enforces delays between message stages and only processes leads that:
        - Are 1st-degree connections
        - Haven't been contacted for the current stage
        - Haven't replied to previous messages
        - Have passed the required delay period for their stage
      tags:
        - Messaging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - campaignId
              properties:
                campaignId:
                  type: integer
                  description: ID of the campaign
                messageStage:
                  type: integer
                  description: Message stage to send (1 for first message, 2+ for follow-ups)
                  default: 1
                batchSize:
                  type: integer
                  description: Number of messages to send in each batch
                  default: 5
            example:
              campaignId: 31
              messageStage: 1
              batchSize: 5
      responses:
        '200':
          description: Job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  jobId:
                    type: string
                    example: "msg_1234567890"
                  message:
                    type: string
                    example: "Connection messages job accepted and queued"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Missing required field: campaignId"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Failed to fetch campaign data"
      x-codeSamples:
        - lang: curl
          source: |
            curl -X POST http://localhost:8080/api/send-connection-messages \
            -H "Content-Type: application/json" \
            -d '{
              "campaignId": 31,
              "messageStage": 1,
              "batchSize": 5
            }'
      x-statusCodes:
        - code: 200
          description: Job successfully created and queued
        - code: 400
          description: Invalid request parameters
        - code: 500
          description: Server error occurred
      x-telegramNotifications:
        - type: success
          description: |
            Job completion notification with statistics:
            - Total leads processed
            - Messages sent
            - Failed messages (with details if any)
        - type: error
          description: Job failure notification with error details
        - type: status
          description: Status updates during processing

components:
  schemas:
    JobResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        jobId:
          type: string
          example: "12345"
        message:
          type: string
          example: "Job queued successfully. Jobs are processed sequentially."
    
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Error message"
    
    JobStatus:
      type: string
      description: Status of a job in the system
      enum:
        - queued
        - started
        - in_progress
        - completed
        - failed
      example: "in_progress"
  
  responses:
    BadRequest:
      description: Bad request - missing or invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Missing required field: campaignId"
    
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Failed to create job"

tags:
  - name: Profile Management
    description: Operations for managing profile data and company information
  - name: Connection Management
    description: Operations for managing connection requests and relationships
  - name: Messaging
    description: Operations for sending messages to profiles and connections
  - name: Authentication
    description: Operations related to LinkedIn authentication 